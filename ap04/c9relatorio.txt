H√° dois erros: no primeiro, o programa 
tenta acessar uma posi√ß√£o inv√°lida fora
da mem√≥ria alocada para o ponteiro x.
No segundo, a mem√≥ria alocada n√£o est√° sendo
liberada.

Para corrigir, podemos alocar 1 espa√ßo a mais
de mem√≥ria e liberar a mem√≥ria alocada para
o ponteiro x.

Script started on 2024-11-15 21:37:29-03:00 [TERM="xterm-256color" TTY="/dev/pts/4" COLUMNS="236" LINES="23"]
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ --valgrin[K[K[K[K[K[K[K[K[Kvalgr[K[K[K[K[Kgcc -g -o c9 c9.c
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ valgrind --c[Kleak-check=full ./c9
==11211== Memcheck, a memory error detector
==11211== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11211== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11211== Command: ./c9
==11211== 
==11211== Invalid write of size 4
==11211==    at 0x10916B: f (c9.c:6)
==11211==    by 0x109180: main (c9.c:11)
==11211==  Address 0x4a48068 is 0 bytes after a block of size 40 alloc'd
==11211==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11211==    by 0x10915E: f (c9.c:5)
==11211==    by 0x109180: main (c9.c:11)
==11211== 
==11211== 
==11211== HEAP SUMMARY:
==11211==     in use at exit: 40 bytes in 1 blocks
==11211==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
==11211== 
==11211== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==11211==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11211==    by 0x10915E: f (c9.c:5)
==11211==    by 0x109180: main (c9.c:11)
==11211== 
==11211== LEAK SUMMARY:
==11211==    definitely lost: 40 bytes in 1 blocks
==11211==    indirectly lost: 0 bytes in 0 blocks
==11211==      possibly lost: 0 bytes in 0 blocks
==11211==    still reachable: 0 bytes in 0 blocks
==11211==         suppressed: 0 bytes in 0 blocks
==11211== 
==11211== For lists of detected and suppressed errors, rerun with: -s
==11211== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ g[Kgdb c9[K[Kc[K./c9
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.2) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./c9[m...
(gdb) break 10
Breakpoint 1 at [34m0x117c[m: file [32mc9.c[m, line 11.
(gdb) run
Starting program: /home/yuriwada/projects/ap04/c9 

Breakpoint 1, [33mmain[m () at [32mc9.c[m:11
11	f();
(gdb) display in[K[Kx
No symbol "x" in current context.
(gdb) display x[K[K[K[K[K[K[K[K[Kquit
A debugging session is active.

	Inferior 1 [process 11394] will be killed.

Quit anyway? (y or n) y
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gdb ./c9[K[K[K[K[K[K[K[Kgcc -g -o [K c9correto c9correto.c
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gcc[K[K[Kvalgrind --leak-check =[K[K=full c9cor[K[K[K[K[K./c9correto
==11945== Memcheck, a memory error detector
==11945== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11945== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11945== Command: ./c9correto
==11945== 
==11945== Invalid write of size 4
==11945==    at 0x10918B: f (c9correto.c:6)
==11945==    by 0x1091AC: main (c9correto.c:11)
==11945==  Address 0x4a48068 is 0 bytes after a block of size 40 alloc'd
==11945==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11945==    by 0x10917E: f (c9correto.c:5)
==11945==    by 0x1091AC: main (c9correto.c:11)
==11945== 
==11945== 
==11945== HEAP SUMMARY:
==11945==     in use at exit: 0 bytes in 0 blocks
==11945==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==11945== 
==11945== All heap blocks were freed -- no leaks are possible
==11945== 
==11945== For lists of detected and suppressed errors, rerun with: -s
==11945== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ valgrind --leak-check=full ./c9correto
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pgcc -g -o c9correto c9correto.c
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gcc -g -o c9correto c9correto.cvalgrind --leak-check=full ./c9correto
==12180== Memcheck, a memory error detector
==12180== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12180== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==12180== Command: ./c9correto
==12180== 
==12180== 
==12180== HEAP SUMMARY:
==12180==     in use at exit: 0 bytes in 0 blocks
==12180==   total heap usage: 1 allocs, 1 frees, 44 bytes allocated
==12180== 
==12180== All heap blocks were freed -- no leaks are possible
==12180== 
==12180== For lists of detected and suppressed errors, rerun with: -s
==12180== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ exit
exit

Script done on 2024-11-15 21:40:50-03:00 [COMMAND_EXIT_CODE="0"]
