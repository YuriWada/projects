O programa verifica se x √© igual a 0,
por√©m a vari√°vel n√£o foi inicializada antes.

Para corrigir, podemos inicializar a vari√°vel
x com 0.

Script started on 2024-11-15 21:58:29-03:00 [TERM="xterm-256color" TTY="/dev/pts/4" COLUMNS="236" LINES="23"]
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gcc -g -o c12 c12.c
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ valgrind --leak-check=full c.[K[K./c12
==16636== Memcheck, a memory error detector
==16636== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16636== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==16636== Command: ./c12
==16636== 
==16636== Conditional jump or move depends on uninitialised value(s)
==16636==    at 0x109159: main (c12.c:6)
==16636== 
X is zero==16636== 
==16636== HEAP SUMMARY:
==16636==     in use at exit: 0 bytes in 0 blocks
==16636==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==16636== 
==16636== All heap blocks were freed -- no leaks are possible
==16636== 
==16636== Use --track-origins=yes to see where uninitialised values come from
==16636== For lists of detected and suppressed errors, rerun with: -s
==16636== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gdb ./c12
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.2) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./c12[m...
(gdb) break 5[K7
Breakpoint 1 at [34m0x115b[m: file [32mc12.c[m, line 7.
(gdb) run
Starting program: /home/yuriwada/projects/ap04/c12 

Breakpoint 1, [33mmain[m () at [32mc12.c[m:7
7	        printf("X is zero"); 
(gdb) display x
1: x = 0
(gdb) next
9	    return 0;
1: x = 0
(gdb) 
10	}
1: x = 0
(gdb) 
[33m__libc_start_main[m ([36mmain[m=0x555555555149 <main>, [36margc[m=1, [36margv[m=0x7fffffffdfd8, [36minit[m=<optimized out>, [36mfini[m=<optimized out>, [36mrtld_fini[m=<optimized out>, [36mstack_end[m=0x7fffffffdfc8) at [32m../csu/libc-start.c[m:342
342	../csu/libc-start.c: No such file or directory.
(gdb) quit y
No symbol "y" in current context.
(gdb) quit
A debugging session is active.

	Inferior 1 [process 16828] will be killed.

Quit anyway? (y or n) y
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ gcc -g -o c12correto c12correto.c
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ --valegri[K[K[K[K[K[K[K[K[Kvalgrind[K[K[K[K[K[K[K[Kvalgrind -g -o [K[K[K[K[K-leak-check=full c12core[Kreto.c.c12correto.c/c12correto.c
valgrind: ./c12correto.c: Permission denied
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ valgrind --leak-check=full ./c12correto.c[K[K
==17277== Memcheck, a memory error detector
==17277== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==17277== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==17277== Command: ./c12correto
==17277== 
X is zero==17277== 
==17277== HEAP SUMMARY:
==17277==     in use at exit: 0 bytes in 0 blocks
==17277==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==17277== 
==17277== All heap blocks were freed -- no leaks are possible
==17277== 
==17277== For lists of detected and suppressed errors, rerun with: -s
==17277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;yuriwada@Yuri: ~/projects/ap04[01;32myuriwada@Yuri[00m:[01;34m~/projects/ap04[00m$ exit
exit

Script done on 2024-11-15 22:00:24-03:00 [COMMAND_EXIT_CODE="0"]
